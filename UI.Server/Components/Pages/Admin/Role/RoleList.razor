@page "/roles"
@inject IJSRuntime js;
@inject Services.IAppRoleService servicesRoleUser
@using ViewModels.AppRole
@rendermode InteractiveServer
@using Microsoft.AspNetCore.Components.QuickGrid
<h3>Controle de Roles</h3>

@if (roles == null)
{
    <p><em>Carregando...</em></p>
}
else
{
    <div class="card-body">
        <QuickGrid Items="FilteredItems" Pagination="pagination">
            <PropertyColumn Property="@(f => f.Name)" Title="Desc" Sortable="true" />
            <PropertyColumn Property="@(f => f.Id)" Title="Desc" Sortable="true" />
            <TemplateColumn Title="Actions">
                <Input type="button" class="btn btn-primary" @onclick="(() => PreparaEdicao(context))" data-toggle="modal" data-target="#roleModal" value="Edita" />
                <input type="button" class="btn btn-danger" @onclick="(() => PreparaExclusao(context))" data-toggle="modal" data-target="#confirmaExclusaoModal" value="Deleta" />
            </TemplateColumn>
        </QuickGrid>
    </div>
    <Paginator State="@pagination" />
}
<div>
    <input type="button" data-toggle="modal" data-target="#roleModal" 
    class="btn btn-primary" value="Nova role" @onclick="(() => InitializeTarefaObject())" />
</div>


<ConfirmaDialog OnClick="@Delete" />

<RoleModal RoleObj=rolesObject AlteracaoDados="@AlteracaoDados">
    <Cabecalho>@cabecalho</Cabecalho>
</RoleModal>

@code {
    List<AppRoleVM> roles;
    AppRoleVM rolesObject = new AppRoleVM();
    string cabecalho = string.Empty;
    PaginationState pagination = new PaginationState { ItemsPerPage = 10 };

    IQueryable<AppRoleVM> FilteredItems
    {
        get
        {
            return roles.AsQueryable();
        }
    }
    protected override async Task OnInitializedAsync()
    {
        var list = servicesRoleUser.GetAll().Result;
        roles = (list.Data.AsQueryable<AppRoleVM>()).ToList();//new List<AppRoleVM>();
    }
    
    private void PreparaEdicao(AppRoleVM role)
    {
        cabecalho = "Edita Role";
        rolesObject = role;
    }

    private void PreparaExclusao(AppRoleVM role)
    {
        rolesObject = role;
    }

    private void InitializeTarefaObject()
    {
        rolesObject = new AppRoleVM();
        //rolesObject.ConclusaoEm = DateTime.Now;
        cabecalho = "Nova Role";
    }
    private async void AlteracaoDados()
    {
        roles = (servicesRoleUser.GetAll().Result.Data.AsQueryable<AppRoleVM>()).ToList();
        StateHasChanged();
    }

    private async Task Delete()
    {
        await servicesRoleUser.DeleteAsync(rolesObject.Id);
        await js.InvokeAsync<object>("CloseModal", "confirmaExclusaoModal");        
        roles = (servicesRoleUser.GetAll().Result.Data.AsQueryable<AppRoleVM>()).ToList();
        rolesObject = new AppRoleVM();
        //StateHasChanged();
    }
}